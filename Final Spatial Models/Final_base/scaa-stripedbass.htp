#if !defined(_SCAA_STRIPEDBASS_)
#  define _SCAA_STRIPEDBASS_

class model_data : public ad_comm{
  data_int fdyear;
  data_int ldyear;
  data_int fmyear;
  data_int lmyear;
  data_int fage;
  data_int lage;
  data_int nyrs;
  data_int fleet;
  data_int region;
  data_int tstep;
  data_int stock;
  data_int nsurv;
  data_int age1surv;
  data_int yoysurv_coast;
  data_int yoysurv_bay;
  data_int tblock;
  data_vector ftyear;
  data_int lbound;
  data_int ubound;
  data_3array obs_C;
  data_4array obs_Cp;
  data_3array obs_CV;
  data_int sfage_a;
  data_int sfage_b;
  data_int sfage_c;
  data_int slage_a;
  data_int slage_b;
  data_int slage_c;
  data_vector obs_I_md;
  data_vector obs_I_ny;
  data_vector obs_I_nj;
  data_vector obs_I_des;
  data_vector obs_I_de30;
  data_matrix obs_I_cm;
  data_matrix obs_I_ct;
  data_matrix obs_Ip_md;
  data_matrix obs_Ip_ny;
  data_matrix obs_Ip_nj;
  data_matrix obs_Ip_des;
  data_matrix obs_Ip_de30;
  data_3array obs_Ip_cm;
  data_3array obs_Ip_ct;
  data_matrix obs_I_CV_cm;
  data_vector obs_I_CV_de30;
  data_matrix obs_I_CV_ct;
  data_vector obs_I_CV_md;
  data_vector obs_I_CV_nj;
  data_vector obs_I_CV_des;
  data_vector obs_I_CV_ny;
  data_matrix obs_I_age1n;
  data_vector obs_I_age1m;
  data_matrix obs_I_age1n_CV;
  data_vector obs_I_age1m_CV;
  data_matrix obs_I_yoy_coast;
  data_matrix obs_I_yoy_bay;
  data_matrix obs_I_yoy_CV_coast;
  data_matrix obs_I_yoy_CV_bay;
  data_matrix w_age;
  data_matrix ssbw_age;
  data_matrix rw_age;
  data_vector m_age;
  data_vector M;
  data_vector sex;
  data_matrix prop_bay;
  data_matrix prop_coast;
  data_matrix log_sd_bay;
  data_matrix log_sd_coast;
  data_matrix acoustic_prop;
  data_matrix acoustic_prop_sd;
  data_int use_aco_prop;
  data_int use_age_err;
  data_matrix age_err_a;
  data_matrix age_err_b;
  data_matrix age_err_c;
  data_matrix age_err_a_id;
  data_matrix age_err_b_id;
  data_matrix age_err_c_id;
  data_vector ESS_C_bay;
  data_number ESS_C_ac;
  data_number ESS_I_cm;
  data_number ESS_I_de30;
  data_number ESS_I_ct;
  data_number ESS_I_md;
  data_number ESS_I_nj;
  data_number ESS_I_des;
  data_number ESS_I_ny;
  data_number test;
  d3_array C_var;
  dmatrix I_var_cm;
  dvector I_var_de30;
  dmatrix I_var_ct;
  dvector I_var_md;
  dvector I_var_nj;
  dvector I_var_des;
  dvector I_var_ny;
  dmatrix I_var_age1;
  dmatrix I_var_age1n;
  dvector I_var_age1m;
  dmatrix I_var_yoy_coast;
  dmatrix I_var_yoy_bay;
  dmatrix mod_age_err_a;
  dmatrix mod_age_err_b;
  dmatrix mod_age_err_c;
  int a;
  int y;
  int s;
  int r;
  int o;
  int z;
  int t;
  int t2;
  int ts;
  double d;
  int ftbyr;
  int ftlyr;
  ~model_data();
  model_data(int argc,char * argv[]);
  friend class model_parameters;
};

class model_parameters : public model_data ,
  public function_minimizer
{
public:
  ~model_parameters();
  void preliminary_calculations(void);
  void set_runtime(void);
  virtual void * mycast(void) {return (void*)this;}
  static int mc_phase(void)
  {
    return initial_params::mc_phase;
  }
  static int mceval_phase(void)
  {
    return initial_params::mceval_phase;
  }
  static int sd_phase(void)
  {
    return initial_params::sd_phase;
  }
  static int current_phase(void)
  {
    return initial_params::current_phase;
  }
  static int last_phase(void)
  {
    return (initial_params::current_phase
      >=initial_params::max_number_phases);
  }
  static prevariable current_feval(void)
  {
    return *objective_function_value::pobjfun;
  }
private:
  ivector integer_control_flags;
  dvector double_control_flags;
  param_init_bounded_dev_vector log_N0_devs;
  param_init_bounded_matrix log_sf1_ac;
  param_matrix sf1_ac;
  param_init_bounded_matrix log_sf2_ac;
  param_matrix sf2_ac;
  param_init_bounded_matrix log_sf1_cb;
  param_matrix sf1_cb;
  param_init_bounded_matrix log_sf2_cb;
  param_matrix sf2_cb;
  param_init_bounded_matrix log_sf3_cb;
  param_matrix sf3_cb;
  param_init_bounded_matrix log_sf4_cb;
  param_matrix sf4_cb;
  param_init_bounded_number log_ssf1_md;
  param_number ssf1_md;
  param_init_bounded_number log_ssf2_md;
  param_number ssf2_md;
  param_init_bounded_number log_ssf1_des;
  param_number ssf1_des;
  param_init_bounded_number log_ssf2_des;
  param_number ssf2_des;
  param_init_bounded_vector log_ssf1_cm;
  param_vector ssf1_cm;
  param_init_bounded_vector log_ssf2_cm;
  param_vector ssf2_cm;
  param_init_bounded_number log_ssf1_ny;
  param_number ssf1_ny;
  param_init_bounded_number log_ssf2_ny;
  param_number ssf2_ny;
  param_init_bounded_number log_ssf3_ny;
  param_number ssf3_ny;
  param_init_bounded_number log_ssf4_ny;
  param_number ssf4_ny;
  param_init_bounded_number log_ssf1_nj;
  param_number ssf1_nj;
  param_init_bounded_number log_ssf2_nj;
  param_number ssf2_nj;
  param_init_bounded_number log_ssf3_nj;
  param_number ssf3_nj;
  param_init_bounded_number log_ssf4_nj;
  param_number ssf4_nj;
  param_init_bounded_number log_ssf1_de30;
  param_number ssf1_de30;
  param_init_bounded_number log_ssf2_de30;
  param_number ssf2_de30;
  param_init_bounded_number log_ssf3_de30;
  param_number ssf3_de30;
  param_init_bounded_number log_ssf4_de30;
  param_number ssf4_de30;
  param_init_bounded_vector log_ssf1_ct;
  param_vector ssf1_ct;
  param_init_bounded_vector log_ssf2_ct;
  param_vector ssf2_ct;
  param_init_bounded_vector log_ssf3_ct;
  param_vector ssf3_ct;
  param_init_bounded_vector log_ssf4_ct;
  param_vector ssf4_ct;
  param_init_bounded_number log_a_sf1;
  param_init_bounded_number log_a_sf2;
  param_number a_sf1;
  param_number a_sf2;
  param_init_number log_q_md;
  param_init_vector log_q_cm;
  param_init_vector log_q_ct;
  param_init_number log_q_ny;
  param_init_number log_q_nj;
  param_init_number log_q_des;
  param_init_number log_q_de30;
  param_number q_md;
  param_vector q_cm;
  param_vector q_ct;
  param_number q_ny;
  param_number q_nj;
  param_number q_des;
  param_number q_de30;
  param_init_number log_q_age1n;
  param_init_number log_q_age1m;
  param_init_vector log_q_yoy_coast;
  param_init_vector log_q_yoy_bay;
  param_init_bounded_vector log_R;
  param_init_bounded_dev_vector log_Rdevs1;
  param_init_bounded_dev_vector log_Rdevs2;
  param_init_bounded_vector log_Feq;
  param_init_bounded_matrix log_F;
  param_init_bounded_dev_vector log_Fdevs_r1t1;
  param_init_bounded_dev_vector log_Fdevs_r1t2;
  param_init_bounded_dev_vector log_Fdevs_r2t1;
  param_init_bounded_dev_vector log_Fdevs_r2t2;
  param_matrix Feq;
  param_4array Nt;
  param_5array N;
  param_4array N_region;
  param_3array Nbay;
  param_3array Ncoast;
  param_4array Z;
  param_4array F;
  param_3array Fbar;
  param_matrix Fplus;
  param_4array Freg_7plus;
  param_4array fsel;
  param_4array log_fsel;
  param_vector afsel;
  param_vector log_afsel;
  param_vector ssel_md;
  param_matrix ssel_cm;
  param_matrix ssel_ct;
  param_vector ssel_ny;
  param_vector ssel_nj;
  param_vector ssel_des;
  param_vector ssel_de30;
  param_number q_age1n;
  param_number q_age1m;
  param_vector q_yoy_coast;
  param_vector q_yoy_bay;
  param_vector q_age1;
  param_4array est_C;
  param_3array est_region_C;
  param_5array est_C_age;
  param_5array est_C_age_err;
  param_4array est_totC_age;
  param_4array est_totC_age_err;
  param_5array est_Cp;
  param_4array est_region_Cp;
  param_4array sigma2_Cp;
  param_matrix ESS_C;
  param_matrix est_I_age_md;
  param_matrix est_I_age_md_err;
  param_matrix est_Ip_md;
  param_vector est_I_md;
  param_matrix sigma2_Ip_md;
  param_3array est_I_age_cm;
  param_3array est_Ip_cm;
  param_matrix est_I_cm;
  param_3array sigma2_Ip_cm;
  param_3array est_I_age_ct;
  param_3array est_I_age_ct_err;
  param_3array est_Ip_ct;
  param_matrix est_I_ct;
  param_3array sigma2_Ip_ct;
  param_matrix est_I_age_ny;
  param_matrix est_I_age_ny_err;
  param_matrix est_Ip_ny;
  param_vector est_I_ny;
  param_matrix sigma2_Ip_ny;
  param_matrix est_I_age_nj;
  param_matrix est_I_age_nj_err;
  param_matrix est_Ip_nj;
  param_vector est_I_nj;
  param_matrix sigma2_Ip_nj;
  param_matrix est_I_age_des;
  param_matrix est_I_age_des_err;
  param_matrix est_Ip_des;
  param_vector est_I_des;
  param_matrix sigma2_Ip_des;
  param_matrix est_I_age_de30;
  param_matrix est_Ip_de30;
  param_vector est_I_de30;
  param_matrix sigma2_Ip_de30;
  param_matrix est_I_age1n;
  param_vector est_I_age1m;
  param_matrix est_I_yoy_coast;
  param_matrix est_I_yoy_bay;
  param_matrix est_I_age1;
  param_matrix rw;
  param_matrix SSB_w;
  param_3array B;
  param_3array SSB;
  param_vector J_w;
  param_init_bounded_matrix log_prop_bay;
  param_init_bounded_matrix log_prop_coast;
  param_4array prop;
  param_stddev_vector Ntot_cb;
  param_stddev_vector Ntot_ac;
  param_stddev_vector N_cbincb1;
  param_stddev_vector N_cbincb2;
  param_stddev_vector N_cbinac1;
  param_stddev_vector N_cbinac2;
  param_stddev_vector N_acincb1;
  param_stddev_vector N_acincb2;
  param_stddev_vector N_acinac1;
  param_stddev_vector N_acinac2;
  param_stddev_vector logSSB_cb;
  param_stddev_vector logSSB_ac;
  param_stddev_vector recruit_cb;
  param_stddev_vector recruit_ac;
  param_stddev_vector Fstockcb_sd;
  param_stddev_vector Fstockac_sd;
  param_stddev_vector Fcb1_sd;
  param_stddev_vector Fcb2_sd;
  param_stddev_vector Fac1_sd;
  param_stddev_vector Fac2_sd;
  param_stddev_vector Catcb1_sd;
  param_stddev_vector Catcb2_sd;
  param_stddev_vector Catac1_sd;
  param_stddev_vector Catac2_sd;
  param_stddev_vector mdssn;
  param_stddev_vector chesmmap1;
  param_stddev_vector chesmmap2;
  param_stddev_vector njbt;
  param_stddev_vector nyohs;
  param_stddev_vector dessn;
  param_stddev_vector de30;
  param_stddev_vector ctlist1;
  param_stddev_vector ctlist2;
  param_stddev_vector oceanage1;
  param_stddev_vector bayage1;
  param_stddev_vector cbyoy;
  param_stddev_vector nyyoy;
  param_stddev_vector njyoy;
  param_matrix sig2_f;
  param_matrix Lcatch;
  param_matrix Lcatchagecomp;
  param_number Lindex_md;
  param_number Lindexagecomp_md;
  param_number Lindex_ny;
  param_number Lindexagecomp_ny;
  param_number Lindex_nj;
  param_number Lindexagecomp_nj;
  param_number Lindex_des;
  param_number Lindexagecomp_des;
  param_number Lindex_de30;
  param_number Lindexagecomp_de30;
  param_vector Lindex_ct;
  param_vector Lindexagecomp_ct;
  param_vector Lindex_cm;
  param_vector Lindexagecomp_cm;
  param_vector Lage1index;
  param_vector Lage1index_ny;
  param_number Lage1index_md;
  param_vector Lyoyindex_coast;
  param_vector Lyoyindex_bay;
  param_matrix Lfsel;
  param_number Lssel_md;
  param_vector Lssel_cm;
  param_number Lssel_ny;
  param_number Lssel_nj;
  param_vector Lssel_ct;
  param_number Lssel_des;
  param_number Lssel_de30;
  param_number Lssel_a;
  param_number Lssel_b;
  param_number Lssel_c;
  param_number pen_N0_dev;
  param_number pen_f2sel;
  param_number pen_F;
  param_number pen_prop;
  param_number pen_prop_aco;
  param_number pen_prop_bay;
  param_number pen_cb_sel;
  param_number pen_rdev;
  param_number pen_fdev;
  param_number pen_feq;
  param_number pen_sf;
  param_number pen_sf_ct;
  param_number prior_function_value;
  param_number likelihood_function_value;
  objective_function_value neg_LL;
public:
  virtual void userfunction(void);
  virtual void report(const dvector& gradients);
  virtual void final_calcs(void);
  model_parameters(int sz,int argc, char * argv[]);
  virtual void initializationfunction(void){}
  void calculate_mortality(void);
  void calculate_N_at_age(void);
  void calculate_B_SSB(void);
  void calculate_fishery_catch(void);
  void calculate_F_stock(void);
  void calculate_survey_catch(void);
  void evaluate_likelihood(void);
 dvar_vector migrate(dvar_vector N,dvar_vector P);
 dvariable beta_mig(dvar_vector occ_prob, dvector alpha, dvector beta);
 dvariable lognorm_negLL(dvector obsI, dvar_vector estI, dvector Ivar, data_int fmyear, data_int lmyear);
 dvariable lognormyoy_negLL(dvector obsI, dvar_vector estI, dvector Ivar, data_int fmyear, data_int lmyear);
 dvariable lognormyoy_negLL(dvector obsI, dvar_vector estI, dvector Ivar, data_int fmyear, int lmyear);
 dvariable multinom_negLL(data_matrix obsP, named_dvar_matrix estP, named_dvar_matrix sigma2, int fage, int lage, int fyear, int lyear);
 dvariable multinom_negLL(dmatrix obsP, dvar_matrix estP, dvar_matrix sigma2, int fage, int lage, int fyear, int lyear);
 dvariable multinom_negLL(dmatrix obsP, dvar_matrix estP, dvar_matrix sigma2, data_int fage, data_int lage, int fyear, int lyear);
 dvariable multinom_negLL(data_matrix obsP, named_dvar_matrix estP, named_dvar_matrix sigma2, data_int fage, data_int lage, int fyear, int lyear);
 dvariable logisticnorm_negLL(dvector obsP, dvar_vector estP, prevariable sigma2, data_int fage, data_int lage, data_int fyear, data_int lyear, double ESS,  prevariable phi, int B );

};
#endif
